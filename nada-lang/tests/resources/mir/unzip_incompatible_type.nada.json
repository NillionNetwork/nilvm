{
  "functions": [
    {
      "id": 4371172800,
      "args": [
        {
          "name": "a",
          "type": "SecretInteger",
          "source_ref_index": 0
        },
        {
          "name": "b",
          "type": "SecretInteger",
          "source_ref_index": 0
        }
      ],
      "function": "mult",
      "operations": {
        "0": {
          "Addition": {
            "id": 0,
            "left": 1,
            "right": 2,
            "type": "SecretInteger",
            "source_ref_index": 0
          }
        },
        "1": {
          "NadaFunctionArgRef": {
            "id": 1,
            "function_id": 4371172800,
            "refers_to": "a",
            "type": "SecretInteger",
            "source_ref_index": 0
          }
        },
        "2": {
          "NadaFunctionArgRef": {
            "id": 2,
            "function_id": 4371172800,
            "refers_to": "b",
            "type": "SecretInteger",
            "source_ref_index": 0
          }
        }
      },
      "return_operation_id": 0,
      "return_type": "SecretInteger",
      "source_ref_index": 0
    },
    {
      "id": 4371173376,
      "args": [
        {
          "name": "a",
          "type": "SecretInteger",
          "source_ref_index": 0
        },
        {
          "name": "b",
          "type": "SecretInteger",
          "source_ref_index": 0
        }
      ],
      "function": "add",
      "operations": {
        "0": {
          "Addition": {
            "id": 0,
            "left": 1,
            "right": 2,
            "type": "SecretInteger",
            "source_ref_index": 0
          }
        },
        "1": {
          "NadaFunctionArgRef": {
            "id": 1,
            "function_id": 4371173376,
            "refers_to": "a",
            "type": "SecretInteger",
            "source_ref_index": 0
          }
        },
        "2": {
          "NadaFunctionArgRef": {
            "id": 2,
            "function_id": 4371173376,
            "refers_to": "b",
            "type": "SecretInteger",
            "source_ref_index": 0
          }
        }
      },
      "return_operation_id": 0,
      "return_type": "SecretInteger",
      "source_ref_index": 0
    }
  ],
  "parties": [
    {
      "name": "Party2",
      "source_ref_index": 0
    },
    {
      "name": "Party1",
      "source_ref_index": 0
    }
  ],
  "inputs": [
    {
      "type": {
        "Array": {
          "inner_type": "SecretInteger",
          "size": 10
        }
      },
      "party": "Party2",
      "name": "my_array_2",
      "doc": "",
      "source_ref_index": 0
    },
    {
      "type": {
        "Array": {
          "inner_type": "SecretInteger",
          "size": 10
        }
      },
      "party": "Party1",
      "name": "my_array_1",
      "doc": "",
      "source_ref_index": 0
    }
  ],
  "literals": [],
  "operations": {
    "0": {
      "Unzip": {
        "id": 0,
        "this": 1,
        "type": {
          "Tuple": {
            "left_type": {
              "Array": {
                "inner_type": "SecretInteger",
                "size": 10
              }
            },
            "right_type": {
              "Array": {
                "inner_type": "SecretInteger",
                "size": 10
              }
            }
          }
        },
        "source_ref_index": 0
      }
    },
    "1": {
      "Zip": {
        "id": 1,
        "left": 3,
        "right": 4,
        "type": {
          "Array": {
            "id": 5,
            "inner_type": {
              "Tuple": {
                "left_type": "SecretBoolean",
                "right_type": "SecretInteger"
              }
            },
            "size": 10
          }
        },
        "source_ref_index": 0
      }
    },
    "3": {
      "InputReference": {
        "id": 3,
        "refers_to": "my_array_2",
        "type": {
          "Array": {
            "inner_type": "SecretBoolean",
            "size": 10
          }
        },
        "source_ref_index": 0
      }
    },
    "4": {
      "InputReference": {
        "id": 4,
        "refers_to": "my_array_1",
        "type": {
          "Array": {
            "inner_type": "SecretInteger",
            "size": 10
          }
        },
        "source_ref_index": 0
      }
    },
    "5": {
      "Reduce": {
        "id": 5,
        "fn": 4371172800,
        "inner": 6,
        "initial": 10,
        "type": "SecretInteger",
        "source_ref_index": 0
      }
    },
    "6": {
      "Map": {
        "id": 6,
        "fn": 4371173376,
        "inner": 7,
        "type": {
          "Array": {
            "inner_type": "SecretInteger",
            "size": 10
          }
        },
        "source_ref_index": 0
      }
    },
    "7": {
      "Zip": {
        "id": 7,
        "left": 8,
        "right": 9,
        "type": {
          "Array": {
            "inner_type": {
              "Tuple": {
                "left_type": "SecretInteger",
                "right_type": "SecretInteger"
              }
            },
            "size": 10
          }
        },
        "source_ref_index": 0
      }
    },
    "8": {
      "InputReference": {
        "id": 8,
        "refers_to": "my_array_1",
        "type": {
          "Array": {
            "inner_type": "SecretInteger",
            "size": 10
          }
        },
        "source_ref_index": 0
      }
    },
    "9": {
      "InputReference": {
        "id": 9,
        "refers_to": "my_array_2",
        "type": {
          "Array": {
            "inner_type": "SecretInteger",
            "size": 10
          }
        },
        "source_ref_index": 0
      }
    },
    "10": {
      "InputReference": {
        "id": 10,
        "refers_to": "my_int1",
        "type": "SecretInteger",
        "source_ref_index": 0
      }
    }
  },
  "outputs": [
    {
      "name": "zip.unzip.tuple",
      "operation_id": 0,
      "party": "Party1",
      "type": {
        "Tuple": {
          "left_type": {
            "Array": {
              "inner_type": "SecretInteger",
              "size": 10
            }
          },
          "right_type": {
            "Array": {
              "inner_type": "SecretInteger",
              "size": 10
            }
          }
        }
      },
      "source_ref_index": 0
    },
    {
      "name": "zip.map.reduce.array",
      "operation_id": 5,
      "party": "Party1",
      "type": "SecretInteger",
      "source_ref_index": 0
    }
  ],
  "source_files": {
    "unzip_incompatible_type.py.py": "from nada_dsl import *\n\n\ndef nada_main():\n    party1 = Party(name=\"Party1\")\n    party2 = Party(name=\"Party2\")\n    my_array_1 = Array(SecretInteger(Input(name=\"my_array_1\", party=party1)), size=10)\n    my_array_2 = Array(SecretInteger(Input(name=\"my_array_2\", party=party2)), size=10)\n\n    unzipped = unzip(my_array_2.zip(my_array_1))\n\n    @nada_fn\n    def add(a: SecretInteger, b: SecretInteger) -> SecretInteger:\n        return a + b\n\n    @nada_fn\n    def mult(a: SecretInteger, b: SecretInteger) -> SecretInteger:\n        return a + b\n\n    new_array = my_array_1.zip(my_array_2).map(add).reduce(mult)\n\n    out1 = Output(unzipped, \"zip.unzip.tuple\", party1)\n    out2 = Output(new_array, \"zip.map.reduce.array\", party1)\n\n    return [out1, out2]\n"
  },
  "source_refs": [
    {
      "file": "file.py",
      "lineno": 9,
      "offset": 207,
      "length": 31
    }
  ]
}